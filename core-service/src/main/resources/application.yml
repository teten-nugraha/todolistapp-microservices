server:
  port: 9001

spring:
  application:
    name: core-service
  jpa:
    database: mysql
    hibernate:
      ddl-auto: none
      show-sql: true
    properties:
      hibernate.format_sql: true
  datasource:
    url: jdbc:mysql://localhost:3306/todoapp-core-db
    username: root
    password: root
    initialization-mode:  # untuk inisialisasi data, jika tabel ada maka di buatkan, tp jika sudah ada maka di skip
    platform: mysql # sesuaikan dengan jenis db, nanti nya akan otomatis membaca schema-mysql.sql dan data-mysql.sql

eureka:
  instance:
    hostname: localhost #untuk dicoba di localhost
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    register-with-eureka: true #untuk mendaftarkan sendiri ke eureka
    fetch-registry: true #untuk bisa memfetch
    registry-fetch-interval-seconds: 5 #5 detik untuk memfetch ke eureka

analytic-service-route:
  ribbon:
    DeploymentContextBasedVipAddresses: analytic-service
    ReadTimeout: 60000
    MaxAutoRetries: 2

application:
  config:
    feign:
      route:
        analytic-service: analytic-service-route

#Feign Client Configuration
feign:
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
        loggerLevel: basic


#for openapi doc
application-description: core service todolist app
application-version: 1.0.0

#to access spring doc
springdoc:
  swagger-ui:
    disable-swagger-default-url: true #untuk menghilangkan default url swagger yaitu Petstore
  packages-to-scan: id.taskapp.coreservice.web  #scan controller layer
  api-docs:
    path: /core-api

